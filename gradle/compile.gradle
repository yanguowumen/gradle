import org.gradle.internal.jvm.Jvm
import org.gradle.jvm.toolchain.internal.JavaInstallationProbe
import org.gradle.jvm.toolchain.internal.LocalJavaInstallation

if (!hasProperty('java7Home')) {
    // We allow the system property and the project property so that it is
    // possible to set compilation with Java 7 from the command line and from gradle.properties.
    // Note that is this needs to work for buildSrc, too. Gradle properties passed
    // on the command line (-P) are not inherited to buildSrc while system properties are.
    ext.java7Home = System.getProperty('java7Home')
}

def javaInstallationProbe = gradle.services.get(JavaInstallationProbe)

ext.jvmForCompilation = Jvm.current()
ext.currentJavaInstallation = new DefaultJavaInstallation()
ext.javaInstallationForCompilation = new DefaultJavaInstallation()
javaInstallationProbe.current(currentJavaInstallation)
javaInstallationProbe.current(javaInstallationForCompilation)

tasks.withType(AbstractCompile) {
    options.fork = true // Always fork compilation
}

if (java7Home) {
    jvmForCompilation = Jvm.forHome(file(java7Home))
    javaInstallationProbe.checkJdk(file(java7Home)).configure(javaInstallationForCompilation)
    tasks.withType(AbstractCompile) {
        options.with {
            fork = true
            if (!(project in rootProject.findProperty('projectsRequiresJava8'))) {
                forkOptions.javaHome = jvmForCompilation.javaHome
            }
        }
    }
}

rootProject.ext.java7HomeSet = java7Home as boolean

tasks.withType(JavaCompile) {
    options.encoding = 'utf-8'
    // We need to ignore the path warning since the launcher.jar references
    // core.jar and base-services.jar in its Manifest - and these are not present
    // while compiling.
    options.compilerArgs = ['-Xlint:-options', '-Xlint:-path']
    options.incremental = true
    inputs.property('javaInstallation') {
        javaInstallationForCompilation.displayName
    }
}
tasks.withType(GroovyCompile) {
    options.encoding = 'utf-8'
    options.compilerArgs = ['-Xlint:-options', '-Xlint:-path']
    groovyOptions.encoding = 'utf-8'
    inputs.property('javaInstallation') {
        currentJavaInstallation.displayName
    }
}

class DefaultJavaInstallation implements LocalJavaInstallation {
    JavaVersion javaVersion
    File javaHome
    String displayName
    String name
}
